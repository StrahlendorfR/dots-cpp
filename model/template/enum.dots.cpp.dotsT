// This file was generated by dcg.py, do not edit, because the changes will be overwritten.
#include "{{name}}.dots.h"
#include "dots/type/EnumDescriptor.h"
#include "EnumDescriptorData.dots.h"
#include "dots/type/Registry.h"

namespace dots
{
namespace type
{

static const types::EnumDescriptorData _dd()
{
    types::EnumDescriptorData ed;
    ed.name("{{name}}");

    auto& elements = ed.elements();

{% for elem in items %}
    {
        types::EnumElementDescriptor eed;
        eed.name("{{elem.name}}");
        eed.enum_value({{elem.value}});
        eed.tag({{elem.tag}});

        elements.push_back(eed);
    }
{% endfor %}

    return ed;
}

template<>
const EnumDescriptor* EnumDescriptorInit<{{name}}>::_td()
{
    static const type::EnumDescriptor* descriptor = nullptr;

    if (not descriptor)
    {
        descriptor = EnumDescriptor::createFromEnumDescriptorData(_dd());
    }
    return descriptor;
}

} // namespace type
} // namespace dots
